---
- name: Get ubuntu keyring
  apt: name=ubuntu-cloud-keyring state=installed update_cache=yes
  
- name: Setup Heat repo
  apt_repository: repo='deb http://ubuntu-cloud.archive.canonical.com/ubuntu trusty-updates/juno main' state=present
  
- name: Refresh dist
  apt: upgrade=dist update_cache=yes state=latest
  
- name: Install heat packages
  apt: name={{ item }} state=installed
  with_items:
   - heat-api
   - heat-api-cfn
   - heat-engine
   - python-heatclient
  notify: Restart server

- name: Waiting for server to come back
  local_action: wait_for port=22 host={{ inventory_hostname }}  delay=5
  sudo: false

## Now configure
- name: Copy heat configuration file
  template: src=heat.conf.j2 dest=/etc/heat/heat.conf
  notify: Restart heat services
  
- name: Create heat user in keystone
  #local_action: keystone_user user={{ heat_admin_user }}  tenant=service password={{ heat_admin_password }} role=admin state=present endpoint={{ os_auth_endpoint }} login_password={{ os_login_password }} login_user={{ os_login_user }} login_tenant_name={{ os_login_tenant }}
  local_action: keystone_user 
    user: {{ heat_admin_user }}
    tenant: service
    password: {{ heat_admin_password }} 
    role: admin
    endpoint: {{ lookup('env', 'OS_AUTH_URL') }}
    login_password: {{ lookup('env', 'OS_PASSWORD') }}
    login_user: {{ lookup('env', 'OS_USERNAME') }}
    login_tenant_name: {{ lookup('env', 'OS_TENANT_NAME') }}
  sudo: false
  when: inventory_hostname == frontendservers[0]
  
- name: Create heat roles
  local_action: keystone_user 
    role: {{ item }} 
    state: present 
    endpoint: {{ lookup('env', 'OS_AUTH_URL') }}
    login_password: {{ lookup('env', 'OS_PASSWORD') }}
    login_user: {{ lookup('env', 'OS_USERNAME') }}
    login_tenant_name: {{ lookup('env', 'OS_TENANT_NAME') }}
  with_items:
    - heat_stack_user
    - heat_stack_owner
  sudo: false
  when: inventory_hostname == frontendservers[0]
  

- name: Create necessary heat databases
  command: sudo su -s /bin/sh -c "heat-manage db_sync" heat
  when: inventory_hostname == frontendservers[0]

  
# Install and configure keepalived
# then the only remainding point is to update the keystone catalog
