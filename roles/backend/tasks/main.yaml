---
- name: Install core cluster packages
  apt: name={{ item }} state=installed update_cache=yes
  with_items:
    - pacemaker 
    - crmsh 
    - corosync 
    - cluster-glue 
    - resource-agents
    - drbd8-utils
    - linux-server
  notify:
    - Restart server

- name: Wait for server to come back
  local_action: 
    module: wait_for 
      host={{ inventory_hostname }} 
      port=22
      delay=2
      timeout=300
  sudo: false
    
- name: Copy the corosync configuration file
  template: src=corosync.conf.j2 dest=/etc/corosync/corosync.conf

- name: Enable corosync
  lineinfile: dest=/etc/default/corosync regexp=^START= line=START=yes

- name: Start corosync
  service: name=corosync state=restarted enabled=yes

- name: Make sure pacemaker is started
  service: name=pacemaker state=started enabled=yes
  
- name: Copy pacemaker properties
  copy: src=pacemaker-properties.txt dest=/tmp/pacemaker-properties.txt
  notify:
    - apply pacemaker properties
  when: dbrole == 'master'
 
- name: "Build hosts file"
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}}" state=present
  when: hostvars[item].ansible_default_ipv4.address is defined
  with_items: groups['all']
